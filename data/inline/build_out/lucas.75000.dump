Number of Mersenne primes up to 75000 = 1047
===-------------------------------------------------------------------------===
LLVM profiling output for execution:
  ./lucas.profile 75000 

===-------------------------------------------------------------------------===
Function execution frequencies:

 ##   Frequency
  1. 7.5e+04/75001 is_prime
  2.     1/75001 is_mersenne_prime
  3.     1/75001 main

===-------------------------------------------------------------------------===
Top 20 most frequently executed basic blocks:

 ##      %% 	Frequency
  1. 33.1508% 262059317/7.90508e+08	is_mersenne_prime() - for.cond
  2. 33.1508% 262059316/7.90508e+08	is_mersenne_prime() - for.body
  3. 33.1508% 262059316/7.90508e+08	is_mersenne_prime() - if.else
  4. 0.115045% 909439/7.90508e+08	is_prime() - return
  5. 0.110301% 871939/7.90508e+08	is_prime() - if.end
  6. 0.110301% 871939/7.90508e+08	is_prime() - if.then9
  7. 0.110301% 871939/7.90508e+08	is_prime() - for.body
  8. 0.0104225% 82391/7.90508e+08	is_mersenne_prime() - return
  9. 0.00948745% 74999/7.90508e+08	is_prime() - entry
 10. 0.00948745% 74999/7.90508e+08	main() - if.then
 11. 0.00948732% 74998/7.90508e+08	is_prime() - if.then3
 12. 0.00948732% 74998/7.90508e+08	is_prime() - lor.lhs.false
 13. 0.00948732% 74998/7.90508e+08	is_prime() - if.else
 14. 0.00868467% 68653/7.90508e+08	main() - for.cond
 15. 0.00855223% 67606/7.90508e+08	is_prime() - for.end
 16. 0.00855223% 67606/7.90508e+08	main() - for.body
 17. 0.00474366% 37499/7.90508e+08	is_prime() - if.else4
 18. 0.00474366% 37499/7.90508e+08	is_prime() - lor.lhs.false.if.then3_crit_edge
 19. 0.00380857% 30107/7.90508e+08	is_prime() - for.cond.for.end_crit_edge
 20. 0.000935222%  7393/7.90508e+08	is_prime() - for.cond
Number of Mersenne primes up to 75000 = 1047
