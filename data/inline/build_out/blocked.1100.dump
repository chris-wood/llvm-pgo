Multiying...
Result...
===-------------------------------------------------------------------------===
LLVM profiling output for executions:
  1. ./blocked.profile 900 
  2. ./blocked.profile 1000 
  3. ./blocked.profile 1100 

===-------------------------------------------------------------------------===
Function execution frequencies:

 ##   Frequency
  1.     3/6 main
  2.     3/6 mmult

  NOTE: 1 function was never executed!

===-------------------------------------------------------------------------===
Top 20 most frequently executed basic blocks:

 ##      %% 	Frequency
  1. 33.2458% 3060003000/9.20419e+09	mmult() - for.cond4
  2. 33.2457% 3060000000/9.20419e+09	mmult() - for.body3
  3. 33.2457% 3060000000/9.20419e+09	mmult() - for.body6
  4. 0.0328112% 3020003/9.20419e+09	main() - for.cond14
  5. 0.0328111% 3020000/9.20419e+09	mmult() - for.inc
  6. 0.0328111% 3020000/9.20419e+09	mmult() - for.end
  7. 0.0328111% 3020000/9.20419e+09	mmult() - for.cond1
  8. 0.0328111% 3020000/9.20419e+09	main() - for.body
  9. 0.0328111% 3020000/9.20419e+09	mmult() - for.body
 10. 0.0328111% 3020000/9.20419e+09	main() - for.body16
 11. 0.0328111% 3020000/9.20419e+09	mmult() - for.end20
 12. 6.51877e-05%  6000/9.20419e+09	main() - for.cond
 13. 3.25939e-05%  3000/9.20419e+09	mmult() - for.end23
 14. 3.25939e-05%  3000/9.20419e+09	mmult() - for.cond
 15. 3.25939e-05%  3000/9.20419e+09	main() - for.end28
 16. 3.25939e-05%  3000/9.20419e+09	mmult() - for.inc18
 17. 3.25939e-05%  3000/9.20419e+09	main() - for.end
 18. 3.25939e-05%  3000/9.20419e+09	main() - for.inc
 19. 3.25939e-05%  3000/9.20419e+09	main() - if.end
 20. 6.51877e-08%     6/9.20419e+09	main() - if.then
Multiying...
Result...
